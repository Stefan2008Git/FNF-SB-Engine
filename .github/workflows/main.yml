name: SB Engine workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq install -o Dpkg::Progress-Fancy="0" -o APT::Color="0" -o Dpkg::Use-Pty="0" libvlc-dev libvlccore-dev < /dev/null > /dev/null
          haxelib setup ~/haxelib
          haxelib --global update haxelib
          haxelib install hxcpp > /dev/null
          haxelib install hmm --quiet
          haxelib run hmm install
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Configure Linux
        run: |
          haxelib run lime setup -alias -y
          haxelib set lime 8.0.2
          haxelib set hscript-Iris 1.0.2
          haxelib list
      - name: Building
        run:
          haxelib run lime build linux
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-linux-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }

      - name: Save Current Cache
        id: cache-release-build-linux-save
        uses: actions/cache/save@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/linux/haxe
            export/release/linux/obj
          key: cache-linux-build

      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: sbEngineLinuxBuild
          path: 'export/release/linux/bin'
  Windows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null
          haxelib install hmm --quiet
          haxelib run hmm install
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Configure Windows
        run: |
          haxelib run lime setup -alias -y
          haxelib set lime 8.0.2
          haxelib set hscript-Iris 1.0.2
          haxelib list
      - name: Building
        run:
          haxelib run lime build windows
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-windows-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }

      - name: Save Current Cache
        id: cache-release-build-windows-save
        uses: actions/cache/save@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/windows/haxe
            export/release/windows/obj
          key: cache-windows-build

      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: sbEngineWindowsBuild
          path: export/release/windows/bin
  Mac:
    runs-on: macos-${{matrix.version}}
    strategy:
      matrix:
        version: [12]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null
          haxelib install hmm --quiet
          haxelib run hmm install
      - name: Configure Mac
        run: |
          haxelib run lime setup -alias -y
          Haxelib set lime 8.0.2
          haxelib set hscript-Iris 1.0.2
          haxelib list
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-macos-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }

      - name: Save Current Cache
        id: cache-release-build-macos-save
        uses: actions/cache/save@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/macos/haxe
            export/release/macos/obj
          key: cache-macos-build

      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: sbEngineMacOSBuild
          path: export/release/macos/bin
  Android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Restore Previous Cache
        id: cache-debug-build-android-restore
        uses: actions/cache/restore@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build

      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp 8dd30d69399f616f4e85295ce3f828219b78af17 --quiet
          haxelib install lime 8.0.2
          haxelib install openfl
          haxelib install flixel
          haxelib run lime setup flixel
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install flixel-addons
          haxelib install tjson
          haxelib install hxjsonast
          haxelib install hscript-Iris 1.0.2
          haxelib git hxCodec https://github.com/SPLCoding/hxCodec-but-it-works-xd
          haxelib git flxanimate https://github.com/Dot-Stuff/flxanimate 768740a56b26aa0c072720e0d1236b94afe68e3e --quiet
          haxelib git linc_luajit https://github.com/mcagabe19-stuff/linc_luajit-legacy 923a8262a7a8dcd166264dcf22cb7395a11fba65 --quiet
          haxelib git extension-androidtools https://github.com/MaysLastPlay77/extension-androidtools
          haxelib git AndroidDialogs https://github.com/beihu235/AndroidDialogs
          haxelib git devicelanguage https://github.com/beihu235/devicelanguage
          haxelib git funkin.vis https://github.com/FunkinCrew/funkVis d5361037efa3a02c4ab20b5bd14ca11e7d00f519 --quiet --skip-dependencies
          haxelib git grig.audio https://gitlab.com/haxe-grig/grig.audio

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Configure Android
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
          haxelib set lime 8.0.2
          haxelib set hscript-Iris 1.0.2
          haxelib list
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Building
        run:
          haxelib run lime build android
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-android-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }

      - name: Save Current Cache
        id: cache-release-build-android-save
        uses: actions/cache/save@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: sbEngineAndroidBuild
          path: export/release/android/bin/app/build/outputs/apk/debug
          if-no-files-found: error
